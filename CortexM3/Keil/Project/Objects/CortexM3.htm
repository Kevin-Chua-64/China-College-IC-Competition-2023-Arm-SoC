<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\CortexM3.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\CortexM3.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Sat Jul 22 23:07:59 2023
<BR><P>
<H3>Maximum Stack Usage =        380 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; run_game &rArr; single_game &rArr; draw_all_through_struct &rArr; draw_play_all &rArr; draw_boss &rArr; LCD_DrawLine_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4]">BusFault_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[10]">SystemInit</a> from system.o(i.SystemInit) referenced from startup_cm3ds.o(.text)
 <LI><a href="#[d]">TIMER0_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[e]">TIMER1_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[c]">UARTOVR_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[a]">UARTRX_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[b]">UARTTX_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_cm3ds.o(.text) referenced from startup_cm3ds.o(RESET)
 <LI><a href="#[f]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[f]">main</a> from main.o(i.main) referenced from startup_cm3ds.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[11]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))

<P><STRONG><a name="[71]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[12]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[22]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[72]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[73]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[74]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[75]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))

<P><STRONG><a name="[76]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[77]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMIHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManageHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVCHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMonHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSVHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler &rArr; SysTickHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>UARTRX_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRXHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>UARTTX_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTTXHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>UARTOVR_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTOVRHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>TIMER0_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TIMER1_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cm3ds.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>rand</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_enemy_planes
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_enemy_buttles
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_boss_buttles
</UL>

<P><STRONG><a name="[78]"></a>srand</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rand.o(.text), UNUSED)

<P><STRONG><a name="[13]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[79]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[17]"></a>BusFaultHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.BusFaultHandler))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>

<P><STRONG><a name="[1a]"></a>DebugMonHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.DebugMonHandler))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>

<P><STRONG><a name="[15]"></a>HardFaultHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.HardFaultHandler))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>

<P><STRONG><a name="[23]"></a>LCD_Clear</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, cortexm3_driver.o(i.LCD_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LCD_Clear &rArr; LCD_SetCursor &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeData
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_end
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_game
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_init
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[27]"></a>LCD_Display_Dir</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, cortexm3_driver.o(i.LCD_Display_Dir))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LCD_Display_Dir &rArr; LCD_Scan_Dir &rArr; LCD_WriteReg &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Scan_Dir
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[29]"></a>LCD_DrawLine</STRONG> (Thumb, 176 bytes, Stack size 68 bytes, cortexm3_driver.o(i.LCD_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = LCD_DrawLine &rArr; LCD_DrawPoint &rArr; LCD_SetCursor &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_play_interface
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_star
</UL>

<P><STRONG><a name="[2b]"></a>LCD_DrawLine_color</STRONG> (Thumb, 172 bytes, Stack size 68 bytes, cortexm3_driver.o(i.LCD_DrawLine_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = LCD_DrawLine_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fast_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_trapezoid
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_right_triangle
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_reversed_trapezoid
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_reversed_right_triangle
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_reversed_left_triangle
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_reversed_equal_triangle
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_rectangle
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_left_triangle
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_heart
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_equal_triangle
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_boss
</UL>

<P><STRONG><a name="[2a]"></a>LCD_DrawPoint</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, cortexm3_driver.o(i.LCD_DrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_DrawPoint &rArr; LCD_SetCursor &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeData
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>

<P><STRONG><a name="[2c]"></a>LCD_Fast_DrawPoint</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, cortexm3_driver.o(i.LCD_Fast_DrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeData
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_my_bullet
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_enemy_bullet
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_color
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine_color
</UL>

<P><STRONG><a name="[2e]"></a>LCD_Fill</STRONG> (Thumb, 102 bytes, Stack size 36 bytes, cortexm3_driver.o(i.LCD_Fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD_Fill &rArr; LCD_SetCursor &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeData
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_my_buttles
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_enemy_planes
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_enemy_buttles
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_my_act
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_boss
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_all_enemy_plane
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_my_plane_to_enemy_plane_collide
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_my_plane_to_enemy_buttles_collide
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_my_buttles_to_enemy_plane_collide
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_my_buttles_to_boss_collide
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_play_title
</UL>

<P><STRONG><a name="[2f]"></a>LCD_Init</STRONG> (Thumb, 1058 bytes, Stack size 4 bytes, cortexm3_driver.o(i.LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LCD_Init &rArr; LCD_Display_Dir &rArr; LCD_Scan_Dir &rArr; LCD_WriteReg &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATAX
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_RD_DATA
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Display_Dir
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[38]"></a>LCD_Pow</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, cortexm3_driver.o(i.LCD_Pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Pow
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowxNum_color
</UL>

<P><STRONG><a name="[31]"></a>LCD_RD_DATA</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, cortexm3_driver.o(i.LCD_RD_DATA))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_RD_DATA &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[28]"></a>LCD_Scan_Dir</STRONG> (Thumb, 1070 bytes, Stack size 20 bytes, cortexm3_driver.o(i.LCD_Scan_Dir))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_Scan_Dir &rArr; LCD_WriteReg &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeData
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Display_Dir
</UL>

<P><STRONG><a name="[24]"></a>LCD_SetCursor</STRONG> (Thumb, 128 bytes, Stack size 12 bytes, cortexm3_driver.o(i.LCD_SetCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LCD_SetCursor &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeData
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[35]"></a>LCD_ShowChar_color</STRONG> (Thumb, 268 bytes, Stack size 40 bytes, cortexm3_driver.o(i.LCD_ShowChar_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_ShowChar_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fast_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowxNum_color
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString_color
</UL>

<P><STRONG><a name="[36]"></a>LCD_ShowString_color</STRONG> (Thumb, 106 bytes, Stack size 52 bytes, cortexm3_driver.o(i.LCD_ShowString_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = LCD_ShowString_color &rArr; LCD_ShowChar_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_color
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_play_interface
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_start_page
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_end
</UL>

<P><STRONG><a name="[37]"></a>LCD_ShowxNum_color</STRONG> (Thumb, 198 bytes, Stack size 72 bytes, cortexm3_driver.o(i.LCD_ShowxNum_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = LCD_ShowxNum_color &rArr; LCD_ShowChar_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowChar_color
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Pow
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_play_title
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_end
</UL>

<P><STRONG><a name="[33]"></a>LCD_WR_DATAX</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, cortexm3_driver.o(i.LCD_WR_DATAX))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_WR_DATAX &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeData
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[2d]"></a>LCD_WR_REG</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, cortexm3_driver.o(i.LCD_WR_REG))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeData
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Scan_Dir
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fast_DrawPoint
</UL>

<P><STRONG><a name="[25]"></a>LCD_WriteRAM_Prepare</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, cortexm3_driver.o(i.LCD_WriteRAM_Prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LCD_WriteRAM_Prepare &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[32]"></a>LCD_WriteReg</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, cortexm3_driver.o(i.LCD_WriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LCD_WriteReg &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MakeData
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Scan_Dir
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[26]"></a>MakeData</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, cortexm3_driver.o(i.MakeData))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATAX
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Scan_Dir
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fast_DrawPoint
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPoint
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[16]"></a>MemManageHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.MemManageHandler))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>

<P><STRONG><a name="[14]"></a>NMIHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.NMIHandler))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[1b]"></a>PendSVHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.PendSVHandler))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[34]"></a>ReadData</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, cortexm3_driver.o(i.ReadData))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_RD_DATA
</UL>

<P><STRONG><a name="[19]"></a>SVCHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.SVCHandler))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>

<P><STRONG><a name="[39]"></a>Set_SysTick_CTRL</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cortexm3_driver.o(i.Set_SysTick_CTRL))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickHandler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>

<P><STRONG><a name="[4b]"></a>Set_SysTick_LOAD</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cortexm3_driver.o(i.Set_SysTick_LOAD))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>

<P><STRONG><a name="[4c]"></a>Set_SysTick_VALUE</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cortexm3_driver.o(i.Set_SysTick_VALUE))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>

<P><STRONG><a name="[1c]"></a>SysTickHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, handler.o(i.SysTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTickHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysTick_CTRL
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[10]"></a>SystemInit</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, system.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SystemInit &rArr; LCD_Init &rArr; LCD_Display_Dir &rArr; LCD_Scan_Dir &rArr; LCD_WriteReg &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cm3ds.o(.text)
</UL>
<P><STRONG><a name="[20]"></a>TIMER0Handler</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, handler.o(i.TIMER0Handler))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_Handler
</UL>

<P><STRONG><a name="[21]"></a>TIMER1Handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, handler.o(i.TIMER1Handler))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_Handler
</UL>

<P><STRONG><a name="[3c]"></a>Timer_Init</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, cortexm3_driver.o(i.Timer_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Timer_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Para_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_init
</UL>

<P><STRONG><a name="[3d]"></a>Timer_Para_Init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cortexm3_driver.o(i.Timer_Para_Init))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Init
</UL>

<P><STRONG><a name="[1f]"></a>UARTOVRHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.UARTOVRHandler))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTOVR_Handler
</UL>

<P><STRONG><a name="[1d]"></a>UARTRXHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.UARTRXHandler))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTRX_Handler
</UL>

<P><STRONG><a name="[1e]"></a>UARTTXHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.UARTTXHandler))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTTX_Handler
</UL>

<P><STRONG><a name="[18]"></a>UsageFaultHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, handler.o(i.UsageFaultHandler))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>

<P><STRONG><a name="[7a]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[7b]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[7c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[3e]"></a>all_init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, run.o(i.all_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = all_init &rArr; draw_all_through_struct &rArr; draw_play_all &rArr; draw_boss &rArr; LCD_DrawLine_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key0_to_skip
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_interface_info
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_all_through_struct
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_play_interface
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_start_page
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Init
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[45]"></a>check_my_buttles_to_boss_collide</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, basic_run.o(i.check_my_buttles_to_boss_collide))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = check_my_buttles_to_boss_collide &rArr; LCD_Fill &rArr; LCD_SetCursor &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;single_game
</UL>

<P><STRONG><a name="[46]"></a>check_my_buttles_to_enemy_plane_collide</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, basic_run.o(i.check_my_buttles_to_enemy_plane_collide))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = check_my_buttles_to_enemy_plane_collide &rArr; LCD_Fill &rArr; LCD_SetCursor &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;single_game
</UL>

<P><STRONG><a name="[47]"></a>check_my_plane_to_enemy_buttles_collide</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, basic_run.o(i.check_my_plane_to_enemy_buttles_collide))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = check_my_plane_to_enemy_buttles_collide &rArr; LCD_Fill &rArr; LCD_SetCursor &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;single_game
</UL>

<P><STRONG><a name="[48]"></a>check_my_plane_to_enemy_plane_collide</STRONG> (Thumb, 250 bytes, Stack size 32 bytes, basic_run.o(i.check_my_plane_to_enemy_plane_collide))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = check_my_plane_to_enemy_plane_collide &rArr; LCD_Fill &rArr; LCD_SetCursor &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;single_game
</UL>

<P><STRONG><a name="[49]"></a>clear_all_enemy_plane</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, basic_run.o(i.clear_all_enemy_plane))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = clear_all_enemy_plane &rArr; draw_my_plane &rArr; draw_trapezoid &rArr; LCD_DrawLine_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_my_plane
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;single_game
</UL>

<P><STRONG><a name="[30]"></a>delay</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, cortexm3_driver.o(i.delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = delay
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysTick_VALUE
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysTick_LOAD
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysTick_CTRL
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_REG
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATAX
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_RD_DATA
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[44]"></a>delay_ms</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, cortexm3_driver.o(i.delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = delay_ms &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;single_game
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key0_to_skip
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_my_act
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_my_plane_to_enemy_plane_collide
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_my_plane_to_enemy_buttles_collide
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_my_buttles_to_enemy_plane_collide
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_my_buttles_to_boss_collide
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_game
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyScan
</UL>

<P><STRONG><a name="[4d]"></a>delay_us</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, cortexm3_driver.o(i.delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysTick_VALUE
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysTick_LOAD
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SysTick_CTRL
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[4e]"></a>draw_all_enemy_buttles</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, draw.o(i.draw_all_enemy_buttles))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = draw_all_enemy_buttles &rArr; draw_enemy_bullet &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_enemy_bullet
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_play_all
</UL>

<P><STRONG><a name="[50]"></a>draw_all_enemy_planes</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, draw.o(i.draw_all_enemy_planes))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = draw_all_enemy_planes &rArr; draw_enemy_plane &rArr; draw_reversed_trapezoid &rArr; LCD_DrawLine_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_enemy_plane
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_play_all
</UL>

<P><STRONG><a name="[52]"></a>draw_all_my_buttles</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, draw.o(i.draw_all_my_buttles))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = draw_all_my_buttles &rArr; draw_my_bullet &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_my_bullet
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_play_all
</UL>

<P><STRONG><a name="[43]"></a>draw_all_through_struct</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, run.o(i.draw_all_through_struct))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = draw_all_through_struct &rArr; draw_play_all &rArr; draw_boss &rArr; LCD_DrawLine_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_play_all
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;single_game
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_game
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_init
</UL>

<P><STRONG><a name="[55]"></a>draw_boss</STRONG> (Thumb, 904 bytes, Stack size 208 bytes, basic_draw.o(i.draw_boss))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = draw_boss &rArr; LCD_DrawLine_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine_color
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_play_all
</UL>

<P><STRONG><a name="[56]"></a>draw_end</STRONG> (Thumb, 390 bytes, Stack size 32 bytes, draw.o(i.draw_end))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = draw_end &rArr; draw_my_plane &rArr; draw_trapezoid &rArr; LCD_DrawLine_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_star
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_my_plane
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowxNum_color
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString_color
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_game
</UL>

<P><STRONG><a name="[4f]"></a>draw_enemy_bullet</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, basic_draw.o(i.draw_enemy_bullet))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = draw_enemy_bullet &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fast_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_all_enemy_buttles
</UL>

<P><STRONG><a name="[51]"></a>draw_enemy_plane</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, basic_draw.o(i.draw_enemy_plane))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = draw_enemy_plane &rArr; draw_reversed_trapezoid &rArr; LCD_DrawLine_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_reversed_trapezoid
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_reversed_right_triangle
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_reversed_left_triangle
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_reversed_equal_triangle
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_rectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_all_enemy_planes
</UL>

<P><STRONG><a name="[5d]"></a>draw_equal_triangle</STRONG> (Thumb, 84 bytes, Stack size 56 bytes, basic_draw.o(i.draw_equal_triangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = draw_equal_triangle &rArr; LCD_DrawLine_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine_color
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_my_plane
</UL>

<P><STRONG><a name="[5e]"></a>draw_heart</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, basic_draw.o(i.draw_heart))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = draw_heart &rArr; LCD_DrawLine_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine_color
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_play_title
</UL>

<P><STRONG><a name="[5f]"></a>draw_left_triangle</STRONG> (Thumb, 80 bytes, Stack size 56 bytes, basic_draw.o(i.draw_left_triangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = draw_left_triangle &rArr; LCD_DrawLine_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine_color
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_my_plane
</UL>

<P><STRONG><a name="[53]"></a>draw_my_bullet</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, basic_draw.o(i.draw_my_bullet))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = draw_my_bullet &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fast_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_all_my_buttles
</UL>

<P><STRONG><a name="[4a]"></a>draw_my_plane</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, basic_draw.o(i.draw_my_plane))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = draw_my_plane &rArr; draw_trapezoid &rArr; LCD_DrawLine_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_trapezoid
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_right_triangle
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_rectangle
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_left_triangle
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_equal_triangle
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_all_enemy_plane
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_start_page
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_play_all
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_end
</UL>

<P><STRONG><a name="[54]"></a>draw_play_all</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, draw.o(i.draw_play_all))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = draw_play_all &rArr; draw_boss &rArr; LCD_DrawLine_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_play_title
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_all_my_buttles
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_all_enemy_planes
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_all_enemy_buttles
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_my_plane
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_boss
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_all_through_struct
</UL>

<P><STRONG><a name="[62]"></a>draw_play_title</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, draw.o(i.draw_play_title))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = draw_play_title &rArr; LCD_ShowxNum_color &rArr; LCD_ShowChar_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_heart
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowxNum_color
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_play_all
</UL>

<P><STRONG><a name="[59]"></a>draw_rectangle</STRONG> (Thumb, 82 bytes, Stack size 64 bytes, basic_draw.o(i.draw_rectangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = draw_rectangle &rArr; LCD_DrawLine_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine_color
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_my_plane
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_enemy_plane
</UL>

<P><STRONG><a name="[58]"></a>draw_reversed_equal_triangle</STRONG> (Thumb, 92 bytes, Stack size 56 bytes, basic_draw.o(i.draw_reversed_equal_triangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = draw_reversed_equal_triangle &rArr; LCD_DrawLine_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine_color
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_enemy_plane
</UL>

<P><STRONG><a name="[5a]"></a>draw_reversed_left_triangle</STRONG> (Thumb, 80 bytes, Stack size 56 bytes, basic_draw.o(i.draw_reversed_left_triangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = draw_reversed_left_triangle &rArr; LCD_DrawLine_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine_color
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_enemy_plane
</UL>

<P><STRONG><a name="[5b]"></a>draw_reversed_right_triangle</STRONG> (Thumb, 80 bytes, Stack size 56 bytes, basic_draw.o(i.draw_reversed_right_triangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = draw_reversed_right_triangle &rArr; LCD_DrawLine_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine_color
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_enemy_plane
</UL>

<P><STRONG><a name="[5c]"></a>draw_reversed_trapezoid</STRONG> (Thumb, 134 bytes, Stack size 64 bytes, basic_draw.o(i.draw_reversed_trapezoid))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = draw_reversed_trapezoid &rArr; LCD_DrawLine_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine_color
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_enemy_plane
</UL>

<P><STRONG><a name="[60]"></a>draw_right_triangle</STRONG> (Thumb, 80 bytes, Stack size 56 bytes, basic_draw.o(i.draw_right_triangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = draw_right_triangle &rArr; LCD_DrawLine_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine_color
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_my_plane
</UL>

<P><STRONG><a name="[57]"></a>draw_star</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, basic_draw.o(i.draw_star))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = draw_star &rArr; LCD_DrawLine &rArr; LCD_DrawPoint &rArr; LCD_SetCursor &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_end
</UL>

<P><STRONG><a name="[3f]"></a>draw_start_page</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, draw.o(i.draw_start_page))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = draw_start_page &rArr; draw_my_plane &rArr; draw_trapezoid &rArr; LCD_DrawLine_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_my_plane
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString_color
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_game
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_init
</UL>

<P><STRONG><a name="[61]"></a>draw_trapezoid</STRONG> (Thumb, 134 bytes, Stack size 64 bytes, basic_draw.o(i.draw_trapezoid))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = draw_trapezoid &rArr; LCD_DrawLine_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine_color
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_my_plane
</UL>

<P><STRONG><a name="[63]"></a>generate_boss_buttles</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, basic_run.o(i.generate_boss_buttles))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = generate_boss_buttles
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;single_game
</UL>

<P><STRONG><a name="[65]"></a>generate_enemy_buttles</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, basic_run.o(i.generate_enemy_buttles))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = generate_enemy_buttles
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;single_game
</UL>

<P><STRONG><a name="[66]"></a>generate_enemy_planes</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, basic_run.o(i.generate_enemy_planes))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = generate_enemy_planes
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;single_game
</UL>

<P><STRONG><a name="[68]"></a>getKey</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, cortexm3_driver.o(i.getKey))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyScan
</UL>

<P><STRONG><a name="[41]"></a>init_interface_info</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, run.o(i.init_interface_info))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_init
</UL>

<P><STRONG><a name="[6c]"></a>init_interface_info_second_time</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, run.o(i.init_interface_info_second_time))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_game
</UL>

<P><STRONG><a name="[42]"></a>init_play_interface</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, draw.o(i.init_play_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = init_play_interface &rArr; LCD_ShowString_color &rArr; LCD_ShowChar_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowString_color
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_game
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_init
</UL>

<P><STRONG><a name="[40]"></a>key0_to_skip</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, run.o(i.key0_to_skip))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = key0_to_skip &rArr; keyScan &rArr; delay_ms &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyScan
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_game
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_init
</UL>

<P><STRONG><a name="[67]"></a>keyScan</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, cortexm3_driver.o(i.keyScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = keyScan &rArr; delay_ms &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getKey
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key0_to_skip
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_my_act
</UL>

<P><STRONG><a name="[f]"></a>main</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = main &rArr; run_game &rArr; single_game &rArr; draw_all_through_struct &rArr; draw_play_all &rArr; draw_boss &rArr; LCD_DrawLine_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_game
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_init
</UL>
<BR>[Address Reference Count : 2]<UL><LI> startup_cm3ds.o(.text)
<LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[6a]"></a>move_boss</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, basic_run.o(i.move_boss))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = move_boss &rArr; LCD_Fill &rArr; LCD_SetCursor &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;single_game
</UL>

<P><STRONG><a name="[69]"></a>run_game</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, run.o(i.run_game))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = run_game &rArr; single_game &rArr; draw_all_through_struct &rArr; draw_play_all &rArr; draw_boss &rArr; LCD_DrawLine_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;single_game
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key0_to_skip
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_interface_info_second_time
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_all_through_struct
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_play_interface
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_start_page
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_end
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6b]"></a>single_game</STRONG> (Thumb, 336 bytes, Stack size 8 bytes, run.o(i.single_game))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = single_game &rArr; draw_all_through_struct &rArr; draw_play_all &rArr; draw_boss &rArr; LCD_DrawLine_color &rArr; LCD_Fast_DrawPoint &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_all_through_struct
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_my_buttles
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_enemy_planes
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_enemy_buttles
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_my_act
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_boss
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_enemy_planes
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_enemy_buttles
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_boss_buttles
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_all_enemy_plane
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_my_plane_to_enemy_plane_collide
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_my_plane_to_enemy_buttles_collide
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_my_buttles_to_enemy_plane_collide
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_my_buttles_to_boss_collide
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_game
</UL>

<P><STRONG><a name="[6d]"></a>switch_my_act</STRONG> (Thumb, 250 bytes, Stack size 24 bytes, basic_run.o(i.switch_my_act))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = switch_my_act &rArr; LCD_Fill &rArr; LCD_SetCursor &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyScan
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;single_game
</UL>

<P><STRONG><a name="[3b]"></a>uart_init</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, cortexm3_driver.o(i.uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[70]"></a>update_enemy_buttles</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, basic_run.o(i.update_enemy_buttles))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = update_enemy_buttles &rArr; LCD_Fill &rArr; LCD_SetCursor &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;single_game
</UL>

<P><STRONG><a name="[6f]"></a>update_enemy_planes</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, basic_run.o(i.update_enemy_planes))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = update_enemy_planes &rArr; LCD_Fill &rArr; LCD_SetCursor &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;single_game
</UL>

<P><STRONG><a name="[6e]"></a>update_my_buttles</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, basic_run.o(i.update_my_buttles))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = update_my_buttles &rArr; LCD_Fill &rArr; LCD_SetCursor &rArr; LCD_WR_REG &rArr; delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;single_game
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[3a]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, system.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
